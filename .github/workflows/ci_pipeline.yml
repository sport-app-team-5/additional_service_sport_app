name: Test coverage
on:
  push:
    branches:
      - develop
      - main
      - release/*

  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
      - converted_to_draft
      - ready_for_review
    branches:
      - develop
      - main
      - release/*

jobs:
  plan-sport-app:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.10 ]
    steps:
      - uses: actions/checkout@v1
      - name: install dependencies
        working-directory: .
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: run tests
        working-directory: .
        id: run-test
        run: pytest
      - name: run coverage
        working-directory: .
        id: run-coverage
        run: |
          pytest --cov=app
          python -m pytest -v --junitxml="coverage.xml"
          echo "Found ${{ steps.pl.outputs.path_count }} file(s) with this extension:"
          for i in ${{ steps.pl.outputs.paths }}; do
          echo $i
          done
      - name: check coverage
        working-directory: .
        id: check-coverage
        run: |
          COVERAGE_THRESHOLD=49
          coverage=$(coverage report -m | tail -n 1 | awk '{print $4}' | tr -d %)
          if [ $coverage -ge $COVERAGE_THRESHOLD ]; then
            echo "Tests coverage ($coverage%) is greater than or equal to the threshold ($COVERAGE_THRESHOLD%). Tests passed!"
          else
            echo "Tests coverage ($coverage%) is below the threshold ($COVERAGE_THRESHOLD%). Tests failed!"
            exit 1
          fi
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install tox and any other packages
        run: pip install tox
      - name: Run tox
        run: tox -e py
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}